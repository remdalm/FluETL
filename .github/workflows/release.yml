name: "Release"
run-name: ${{ github.actor }} is releasing ${{  github.ref_name }}

permissions:
  contents: "write"

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  create-release:
    name: "Create release"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4
      
      - name: "Create release"
        uses: "taiki-e/create-gh-release-action@v1"
        with:
          # (optional) Path to changelog.
          # changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: "Upload assets to Github releases"
    needs: 
     - "create-release"
    strategy:
      fail-fast: false
      matrix:
        include:
          #https://doc.rust-lang.org/nightly/rustc/platform-support.html
          - target: "x86_64-unknown-linux-gnu"
            os: "ubuntu-latest"
          # - target: "x86_64-unknown-linux-musl"
          #   os: "ubuntu-latest"
          # - target: aarch64-apple-darwin
          #   os: macos-latest - Larger runners are only available for organizations and enterprises using the GitHub Team or GitHub Enterprise Cloud plans.
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4

      # Macos for M1 achitecture is only available for organizations and enterprises using the GitHub Team or GitHub Enterprise Cloud plans.
      # - name: "Install lmysqlclient" # needed for diesel compilation
      #   if: matrix.os == 'macos-latest'
      #   shell: bash
      #   run : |
      #     brew install mysql

      - name: "Upload Binaries"
        uses: "taiki-e/upload-rust-binary-action@v1"
        with:
          bin: "fluetl"
          target: ${{ matrix.target }}
          archive: $bin-${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}